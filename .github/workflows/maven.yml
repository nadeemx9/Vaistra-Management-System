# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

#name: Java CI with Maven
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up JDK 17
#      uses: actions/setup-java@v2
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#        cache: maven
#    - name: Set Environment Variables
#      run: |
#        echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
#        echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
#        echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
#        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
#        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
#
#      shell: bash
#    - name: Build with Maven
#      run: mvn clean install
#
#    - name: Build & push Docker image
#      uses: mr-smithers-excellent/docker-build-push@v6
#      with:
#        image: nadeemx9/cscv-github-action
#        tags: latest
#        registry: docker.io
#        dockerfile: Dockerfile
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}
#
#    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:

      postgres:

        image: postgres:15.4

        env:
          POSTGRES_HOST: localhost
          POSTGRES_PASSWORD: root
          POSTGRES_USER: postgres
          POSTGRES_DB: vaistra-management-system
          POSTGRES_PORT: 5432
          POSTGRES_URL: postgres://postgres:postgres@172.17.0.2:5432/vaistra-management-system

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3

        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          mvn clean install
          mkdir staging && cp target/*.jar staging

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6

        with:
          image: nadeemx9/cscv-github-action
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: persist workflow as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: github-actions-artifacts
          path: staging

        # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

